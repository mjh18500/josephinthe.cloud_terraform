name: Terraform CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  TF_VERSION: 1.7.0
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  # -------------------------------
  # ðŸ§ª Deploy PR-specific test env
  # -------------------------------
  deploy-test-env:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Deploy Test Infrastructure
    env:
      RESOURCE_GROUP_NAME: "test-${{ github.event.pull_request.number }}"
      LOCATION: "eastus2"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Validate
        working-directory: terraform/environments/test
        run: terraform validate

      - name: Init and Apply Test Backend
        working-directory: terraform/environments/test
        run: |
          terraform init
          terraform apply -auto-approve \
            -var="pr_number=${{ github.event.pull_request.number }}" \
            -var="resource_group_name=${RESOURCE_GROUP_NAME}" \
            -var="location=${LOCATION}" \
            -var="env_name=test-${{ github.event.pull_request.number }}"

  # -------------------------------------
  # âœ… Run Cypress and Linting in parallel
  # -------------------------------------
  test:
    needs: deploy-test-env
    runs-on: ubuntu-latest
    name: Run Cypress & Lint
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.16.0

      - name: Install dependencies
        run: npm ci
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Get Terraform Outputs
        working-directory: terraform/environments/test
        id: tf-output
        run: |
          echo "FRONTDOOR_URL=$(terraform output -raw frontdoor_endpoint_url)" >> $GITHUB_ENV
          echo "APIM_URL=$(terraform output -raw apim_api_url)" >> $GITHUB_ENV
          echo "FUNCAPP_URL=$(terraform output -raw function_app_url)" >> $GITHUB_ENV    

      - name: Run Cypress E2E tests
        run:  npx cypress run
        env:
          CYPRESS_BASE_URL: ${{ env.FRONTDOOR_URL }}
          CYPRESS_APIM_URL: ${{ env.APIM_URL }}
          CYPRESS_FUNCAPP_URL: ${{ env.FUNCAPP_URL }}

  
