name: Terraform CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  TF_VERSION: 1.7.0
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  tf-pr-init:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init and Apply (PR Test Infra)
        working-directory: terraform/pr
        run: |
          terraform init
          terraform apply -auto-approve \
            -var="resource_group_name=test-${{ github.event.pull_request.number }}" \
            -var="unique_suffix=${{ github.event.pull_request.number }}"

  run-tests:
    needs: tf-pr-init
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci

      - name: Run Cypress Tests
        run: |
          CYPRESS_BASE_URL=https://test-${{ github.event.pull_request.number }}.azureedge.net \
          npx cypress run

  deploy-prod:
    if: github.event_name == 'push'
    needs: run-tests
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your.custom.domain
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init and Apply (Production)
        working-directory: terraform/prod
        run: |
          terraform init
          terraform apply -auto-approve

  cleanup-test-env:
    if: github.event_name == 'push'
    needs: deploy-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Destroy (PR Test Infra)
        working-directory: terraform/pr
        run: |
          terraform init
          terraform destroy -auto-approve \
            -var="resource_group_name=test-${{ github.run_number }}" \
            -var="unique_suffix=${{ github.run_number }}"
